{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { PermissionStatus } from 'expo-modules-core';\nimport { LocationAccuracy } from \"./Location.types\";\nimport { LocationEventEmitter } from \"./LocationEventEmitter\";\nvar GeocoderError = function (_Error) {\n  _inherits(GeocoderError, _Error);\n  var _super = _createSuper(GeocoderError);\n  function GeocoderError() {\n    var _this;\n    _classCallCheck(this, GeocoderError);\n    _this = _super.call(this, 'Geocoder service is not available for this device.');\n    _this.code = 'E_NO_GEOCODER';\n    return _this;\n  }\n  return _createClass(GeocoderError);\n}(_wrapNativeSuper(Error));\nfunction geolocationPositionToJSON(position) {\n  var coords = position.coords,\n    timestamp = position.timestamp;\n  return {\n    coords: {\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      altitude: coords.altitude,\n      accuracy: coords.accuracy,\n      altitudeAccuracy: coords.altitudeAccuracy,\n      heading: coords.heading,\n      speed: coords.speed\n    },\n    timestamp: timestamp\n  };\n}\nfunction isLocationValid(location, options) {\n  var _location$coords$accu;\n  var maxAge = typeof options.maxAge === 'number' ? options.maxAge : Infinity;\n  var requiredAccuracy = typeof options.requiredAccuracy === 'number' ? options.requiredAccuracy : Infinity;\n  var locationAccuracy = (_location$coords$accu = location.coords.accuracy) != null ? _location$coords$accu : Infinity;\n  return Date.now() - location.timestamp <= maxAge && locationAccuracy <= requiredAccuracy;\n}\nfunction getPermissionsAsync() {\n  return _regeneratorRuntime().async(function getPermissionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve) {\n            var resolveWithStatus = function resolveWithStatus(status) {\n              return resolve({\n                status: status,\n                granted: status === PermissionStatus.GRANTED,\n                canAskAgain: true,\n                expires: 0\n              });\n            };\n            navigator.geolocation.getCurrentPosition(function () {\n              return resolveWithStatus(PermissionStatus.GRANTED);\n            }, function (_ref) {\n              var code = _ref.code;\n              if (code === 1) {\n                resolveWithStatus(PermissionStatus.DENIED);\n              } else {\n                resolveWithStatus(PermissionStatus.UNDETERMINED);\n              }\n            }, {\n              enableHighAccuracy: false,\n              maximumAge: Infinity\n            });\n          }));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nvar lastKnownPosition = null;\nexport default {\n  get name() {\n    return 'ExpoLocation';\n  },\n  getProviderStatusAsync: function getProviderStatusAsync() {\n    return _regeneratorRuntime().async(function getProviderStatusAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", {\n              locationServicesEnabled: 'geolocation' in navigator\n            });\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getLastKnownPositionAsync: function getLastKnownPositionAsync() {\n    var options,\n      _args3 = arguments;\n    return _regeneratorRuntime().async(function getLastKnownPositionAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n            if (!(lastKnownPosition && isLocationValid(lastKnownPosition, options))) {\n              _context3.next = 3;\n              break;\n            }\n            return _context3.abrupt(\"return\", lastKnownPosition);\n          case 3:\n            return _context3.abrupt(\"return\", null);\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getCurrentPositionAsync: function getCurrentPositionAsync(options) {\n    return _regeneratorRuntime().async(function getCurrentPositionAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var _options$accuracy;\n              var resolver = function resolver(position) {\n                lastKnownPosition = geolocationPositionToJSON(position);\n                resolve(lastKnownPosition);\n              };\n              navigator.geolocation.getCurrentPosition(resolver, reject, _objectSpread({\n                maximumAge: Infinity,\n                enableHighAccuracy: ((_options$accuracy = options.accuracy) != null ? _options$accuracy : 0) > LocationAccuracy.Balanced\n              }, options));\n            }));\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  removeWatchAsync: function removeWatchAsync(watchId) {\n    return _regeneratorRuntime().async(function removeWatchAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            navigator.geolocation.clearWatch(watchId);\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  watchDeviceHeading: function watchDeviceHeading(headingId) {\n    return _regeneratorRuntime().async(function watchDeviceHeading$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            console.warn('Location.watchDeviceHeading: is not supported on web');\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  hasServicesEnabledAsync: function hasServicesEnabledAsync() {\n    return _regeneratorRuntime().async(function hasServicesEnabledAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", 'geolocation' in navigator);\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  geocodeAsync: function geocodeAsync() {\n    return _regeneratorRuntime().async(function geocodeAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            throw new GeocoderError();\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  reverseGeocodeAsync: function reverseGeocodeAsync() {\n    return _regeneratorRuntime().async(function reverseGeocodeAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            throw new GeocoderError();\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  watchPositionImplAsync: function watchPositionImplAsync(watchId, options) {\n    return _regeneratorRuntime().async(function watchPositionImplAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            return _context10.abrupt(\"return\", new Promise(function (resolve) {\n              watchId = global.navigator.geolocation.watchPosition(function (position) {\n                lastKnownPosition = geolocationPositionToJSON(position);\n                LocationEventEmitter.emit('Expo.locationChanged', {\n                  watchId: watchId,\n                  location: lastKnownPosition\n                });\n              }, undefined, options);\n              resolve(watchId);\n            }));\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getPermissionsAsync: getPermissionsAsync,\n  requestPermissionsAsync: function requestPermissionsAsync() {\n    return _regeneratorRuntime().async(function requestPermissionsAsync$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            return _context11.abrupt(\"return\", getPermissionsAsync());\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  requestForegroundPermissionsAsync: function requestForegroundPermissionsAsync() {\n    return _regeneratorRuntime().async(function requestForegroundPermissionsAsync$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            return _context12.abrupt(\"return\", getPermissionsAsync());\n          case 1:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  requestBackgroundPermissionsAsync: function requestBackgroundPermissionsAsync() {\n    return _regeneratorRuntime().async(function requestBackgroundPermissionsAsync$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            return _context13.abrupt(\"return\", getPermissionsAsync());\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getForegroundPermissionsAsync: function getForegroundPermissionsAsync() {\n    return _regeneratorRuntime().async(function getForegroundPermissionsAsync$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            return _context14.abrupt(\"return\", getPermissionsAsync());\n          case 1:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getBackgroundPermissionsAsync: function getBackgroundPermissionsAsync() {\n    return _regeneratorRuntime().async(function getBackgroundPermissionsAsync$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            return _context15.abrupt(\"return\", getPermissionsAsync());\n          case 1:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  startObserving: function startObserving() {},\n  stopObserving: function stopObserving() {}\n};","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA,SAA6BA,gBAAgB,QAAQ,mBAAmB;AAExE,SAIEC,gBAAgB;AAElB,SAASC,oBAAoB;AAAiC,IAExDC,aAAc;EAAA;EAAA;EAGlB;IAAA;IAAA;IACE,0BAAM,oDAAoD;IAC1D,MAAKC,IAAI,GAAG,eAAe;IAAC;EAC9B;EAAC;AAAA,mBANyBC,KAAK;AAYjC,SAASC,yBAAyB,CAACC,QAAwB;EACzD,IAAQC,MAAM,GAAgBD,QAAQ,CAA9BC,MAAM;IAAEC,SAAS,GAAKF,QAAQ,CAAtBE,SAAS;EACzB,OAAO;IACLD,MAAM,EAAE;MACNE,QAAQ,EAAEF,MAAM,CAACE,QAAQ;MACzBC,SAAS,EAAEH,MAAM,CAACG,SAAS;MAC3BC,QAAQ,EAAEJ,MAAM,CAACI,QAAQ;MACzBC,QAAQ,EAAEL,MAAM,CAACK,QAAQ;MACzBC,gBAAgB,EAAEN,MAAM,CAACM,gBAAgB;MACzCC,OAAO,EAAEP,MAAM,CAACO,OAAO;MACvBC,KAAK,EAAER,MAAM,CAACQ;KACf;IACDP,SAAS,EAATA;GACD;AACH;AAKA,SAASQ,eAAe,CAACC,QAAwB,EAAEC,OAAiC;EAAA;EAClF,IAAMC,MAAM,GAAG,OAAOD,OAAO,CAACC,MAAM,KAAK,QAAQ,GAAGD,OAAO,CAACC,MAAM,GAAGC,QAAQ;EAC7E,IAAMC,gBAAgB,GACpB,OAAOH,OAAO,CAACG,gBAAgB,KAAK,QAAQ,GAAGH,OAAO,CAACG,gBAAgB,GAAGD,QAAQ;EACpF,IAAME,gBAAgB,4BAAGL,QAAQ,CAACV,MAAM,CAACK,QAAQ,oCAAIQ,QAAQ;EAE7D,OAAOG,IAAI,CAACC,GAAG,EAAE,GAAGP,QAAQ,CAACT,SAAS,IAAIW,MAAM,IAAIG,gBAAgB,IAAID,gBAAgB;AAC1F;AAMA,SAAeI,mBAAmB;EAAA;IAAA;MAAA;QAAA;UAAA,iCACzB,IAAIC,OAAO,CAAqB,UAACC,OAAO,EAAI;YACjD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,MAAM;cAAA,OAC/BF,OAAO,CAAC;gBACNE,MAAM,EAANA,MAAM;gBACNC,OAAO,EAAED,MAAM,KAAK9B,gBAAgB,CAACgC,OAAO;gBAC5CC,WAAW,EAAE,IAAI;gBACjBC,OAAO,EAAE;eACV,CAAC;YAAA;YAEJC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtC;cAAA,OAAMR,iBAAiB,CAAC7B,gBAAgB,CAACgC,OAAO,CAAC;YAAA,GACjD,gBAAa;cAAA,IAAV5B,IAAI,QAAJA,IAAI;cACL,IAAIA,IAAI,KAAK,CAAC,EAA0B;gBACtCyB,iBAAiB,CAAC7B,gBAAgB,CAACsC,MAAM,CAAC;eAC3C,MAAM;gBACLT,iBAAiB,CAAC7B,gBAAgB,CAACuC,YAAY,CAAC;;YAEpD,CAAC,EACD;cAAEC,kBAAkB,EAAE,KAAK;cAAEC,UAAU,EAAEpB;YAAQ,CAAE,CACpD;UACH,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAGJ,IAAIqB,iBAAiB,GAA0B,IAAI;AAEnD,eAAe;EACb,IAAIC,IAAI;IACN,OAAO,cAAc;EACvB,CAAC;EACKC,sBAAsB;IAAA;MAAA;QAAA;UAAA;YAAA,kCACnB;cACLC,uBAAuB,EAAE,aAAa,IAAIV;aAC3C;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAEGW,yBAAyB;IAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YAC7B3B,qEAAoC,EAAE;YAAA,MAElCuB,iBAAiB,IAAIzB,eAAe,CAACyB,iBAAiB,EAAEvB,OAAO,CAAC;cAAA;cAAA;YAAA;YAAA,kCAC3DuB,iBAAiB;UAAA;YAAA,kCAEnB,IAAI;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAEPK,uBAAuB,mCAAC5B,OAAwB;IAAA;MAAA;QAAA;UAAA;YAAA,kCAC7C,IAAIQ,OAAO,CAAiB,UAACC,OAAO,EAAEoB,MAAM,EAAI;cAAA;cACrD,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAI1C,QAAQ,EAAI;gBAC5BmC,iBAAiB,GAAGpC,yBAAyB,CAACC,QAAQ,CAAC;gBACvDqB,OAAO,CAACc,iBAAiB,CAAC;cAC5B,CAAC;cACDP,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACY,QAAQ,EAAED,MAAM;gBACvDP,UAAU,EAAEpB,QAAQ;gBACpBmB,kBAAkB,EAAE,sBAACrB,OAAO,CAACN,QAAQ,gCAAI,CAAC,IAAIZ,gBAAgB,CAACiD;cAAQ,GACpE/B,OAAO,EACV;YACJ,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAEEgC,gBAAgB,4BAACC,OAAO;IAAA;MAAA;QAAA;UAAA;YAC5BjB,SAAS,CAACC,WAAW,CAACiB,UAAU,CAACD,OAAO,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAEtCE,kBAAkB,8BAACC,SAAS;IAAA;MAAA;QAAA;UAAA;YAChCC,OAAO,CAACC,IAAI,CAAC,sDAAsD,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAEjEC,uBAAuB;IAAA;MAAA;QAAA;UAAA;YAAA,kCACpB,aAAa,IAAIvB,SAAS;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAE7BwB,YAAY;IAAA;MAAA;QAAA;UAAA;YAAA,MACV,IAAIxD,aAAa,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAErByD,mBAAmB;IAAA;MAAA;QAAA;UAAA;YAAA,MACjB,IAAIzD,aAAa,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAErB0D,sBAAsB,kCAACT,OAAe,EAAEjC,OAAwB;IAAA;MAAA;QAAA;UAAA;YAAA,mCAC7D,IAAIQ,OAAO,CAAS,UAACC,OAAO,EAAI;cAErCwB,OAAO,GAAGU,MAAM,CAAC3B,SAAS,CAACC,WAAW,CAAC2B,aAAa,CAClD,UAACxD,QAAQ,EAAI;gBACXmC,iBAAiB,GAAGpC,yBAAyB,CAACC,QAAQ,CAAC;gBACvDL,oBAAoB,CAAC8D,IAAI,CAAC,sBAAsB,EAAE;kBAChDZ,OAAO,EAAPA,OAAO;kBACPlC,QAAQ,EAAEwB;iBACX,CAAC;cACJ,CAAC,EACDuB,SAAS,EAET9C,OAAO,CACR;cACDS,OAAO,CAACwB,OAAO,CAAC;YAClB,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAGJ1B,mBAAmB,EAAnBA,mBAAmB;EACbwC,uBAAuB;IAAA;MAAA;QAAA;UAAA;YAAA,mCACpBxC,mBAAmB,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAExByC,iCAAiC;IAAA;MAAA;QAAA;UAAA;YAAA,mCAC9BzC,mBAAmB,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAExB0C,iCAAiC;IAAA;MAAA;QAAA;UAAA;YAAA,mCAC9B1C,mBAAmB,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAExB2C,6BAA6B;IAAA;MAAA;QAAA;UAAA;YAAA,mCAC1B3C,mBAAmB,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAExB4C,6BAA6B;IAAA;MAAA;QAAA;UAAA;YAAA,mCAC1B5C,mBAAmB,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAI9B6C,cAAc,6BAAI,CAAC;EACnBC,aAAa,4BAAI;CAClB","names":["PermissionStatus","LocationAccuracy","LocationEventEmitter","GeocoderError","code","Error","geolocationPositionToJSON","position","coords","timestamp","latitude","longitude","altitude","accuracy","altitudeAccuracy","heading","speed","isLocationValid","location","options","maxAge","Infinity","requiredAccuracy","locationAccuracy","Date","now","getPermissionsAsync","Promise","resolve","resolveWithStatus","status","granted","GRANTED","canAskAgain","expires","navigator","geolocation","getCurrentPosition","DENIED","UNDETERMINED","enableHighAccuracy","maximumAge","lastKnownPosition","name","getProviderStatusAsync","locationServicesEnabled","getLastKnownPositionAsync","getCurrentPositionAsync","reject","resolver","Balanced","removeWatchAsync","watchId","clearWatch","watchDeviceHeading","headingId","console","warn","hasServicesEnabledAsync","geocodeAsync","reverseGeocodeAsync","watchPositionImplAsync","global","watchPosition","emit","undefined","requestPermissionsAsync","requestForegroundPermissionsAsync","requestBackgroundPermissionsAsync","getForegroundPermissionsAsync","getBackgroundPermissionsAsync","startObserving","stopObserving"],"sourceRoot":"","sources":["../src/ExpoLocation.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus } from 'expo-modules-core';\n\nimport {\n  LocationLastKnownOptions,\n  LocationObject,\n  LocationOptions,\n  LocationAccuracy,\n} from './Location.types';\nimport { LocationEventEmitter } from './LocationEventEmitter';\n\nclass GeocoderError extends Error {\n  code: string;\n\n  constructor() {\n    super('Geocoder service is not available for this device.');\n    this.code = 'E_NO_GEOCODER';\n  }\n}\n\n/**\n * Converts `GeolocationPosition` to JavaScript object.\n */\nfunction geolocationPositionToJSON(position: LocationObject): LocationObject {\n  const { coords, timestamp } = position;\n  return {\n    coords: {\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      altitude: coords.altitude,\n      accuracy: coords.accuracy,\n      altitudeAccuracy: coords.altitudeAccuracy,\n      heading: coords.heading,\n      speed: coords.speed,\n    },\n    timestamp,\n  };\n}\n\n/**\n * Checks whether given location didn't exceed given `maxAge` and fits in the required accuracy.\n */\nfunction isLocationValid(location: LocationObject, options: LocationLastKnownOptions): boolean {\n  const maxAge = typeof options.maxAge === 'number' ? options.maxAge : Infinity;\n  const requiredAccuracy =\n    typeof options.requiredAccuracy === 'number' ? options.requiredAccuracy : Infinity;\n  const locationAccuracy = location.coords.accuracy ?? Infinity;\n\n  return Date.now() - location.timestamp <= maxAge && locationAccuracy <= requiredAccuracy;\n}\n\n/**\n * Gets the permission details. The implementation is not very good as it actually requests\n * for the current location, but there is no better way on web so far :(\n */\nasync function getPermissionsAsync(): Promise<PermissionResponse> {\n  return new Promise<PermissionResponse>((resolve) => {\n    const resolveWithStatus = (status) =>\n      resolve({\n        status,\n        granted: status === PermissionStatus.GRANTED,\n        canAskAgain: true,\n        expires: 0,\n      });\n\n    navigator.geolocation.getCurrentPosition(\n      () => resolveWithStatus(PermissionStatus.GRANTED),\n      ({ code }) => {\n        if (code === 1 /* PERMISSION_DENIED */) {\n          resolveWithStatus(PermissionStatus.DENIED);\n        } else {\n          resolveWithStatus(PermissionStatus.UNDETERMINED);\n        }\n      },\n      { enableHighAccuracy: false, maximumAge: Infinity }\n    );\n  });\n}\n\nlet lastKnownPosition: LocationObject | null = null;\n\nexport default {\n  get name(): string {\n    return 'ExpoLocation';\n  },\n  async getProviderStatusAsync(): Promise<{ locationServicesEnabled: boolean }> {\n    return {\n      locationServicesEnabled: 'geolocation' in navigator,\n    };\n  },\n  async getLastKnownPositionAsync(\n    options: LocationLastKnownOptions = {}\n  ): Promise<LocationObject | null> {\n    if (lastKnownPosition && isLocationValid(lastKnownPosition, options)) {\n      return lastKnownPosition;\n    }\n    return null;\n  },\n  async getCurrentPositionAsync(options: LocationOptions): Promise<LocationObject> {\n    return new Promise<LocationObject>((resolve, reject) => {\n      const resolver = (position) => {\n        lastKnownPosition = geolocationPositionToJSON(position);\n        resolve(lastKnownPosition);\n      };\n      navigator.geolocation.getCurrentPosition(resolver, reject, {\n        maximumAge: Infinity,\n        enableHighAccuracy: (options.accuracy ?? 0) > LocationAccuracy.Balanced,\n        ...options,\n      });\n    });\n  },\n  async removeWatchAsync(watchId): Promise<void> {\n    navigator.geolocation.clearWatch(watchId);\n  },\n  async watchDeviceHeading(headingId): Promise<void> {\n    console.warn('Location.watchDeviceHeading: is not supported on web');\n  },\n  async hasServicesEnabledAsync(): Promise<boolean> {\n    return 'geolocation' in navigator;\n  },\n  async geocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async reverseGeocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async watchPositionImplAsync(watchId: string, options: LocationOptions): Promise<string> {\n    return new Promise<string>((resolve) => {\n      // @ts-ignore: the types here need to be fixed\n      watchId = global.navigator.geolocation.watchPosition(\n        (position) => {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          LocationEventEmitter.emit('Expo.locationChanged', {\n            watchId,\n            location: lastKnownPosition,\n          });\n        },\n        undefined,\n        // @ts-ignore: the options object needs to be fixed\n        options\n      );\n      resolve(watchId);\n    });\n  },\n\n  getPermissionsAsync,\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async requestForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async requestBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async getForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async getBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n\n  // no-op\n  startObserving() {},\n  stopObserving() {},\n};\n"]},"metadata":{},"sourceType":"module"}