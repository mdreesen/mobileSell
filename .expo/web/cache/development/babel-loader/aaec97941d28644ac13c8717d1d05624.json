{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/michaeldreesen/Documents/Programming/projects/management/node_modules/expo/build/launch/withExpoRoot.web.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport * as ErrorRecovery from 'expo-error-recovery';\nimport * as React from 'react';\nimport RootErrorBoundary from \"./RootErrorBoundary\";\nexport default function withExpoRoot(AppRootComponent) {\n  return function (_React$Component) {\n    _inherits(ExpoRootComponent, _React$Component);\n    var _super = _createSuper(ExpoRootComponent);\n    function ExpoRootComponent() {\n      _classCallCheck(this, ExpoRootComponent);\n      return _super.apply(this, arguments);\n    }\n    _createClass(ExpoRootComponent, [{\n      key: \"render\",\n      value: function render() {\n        var props = _objectSpread({}, this.props, {\n          exp: _objectSpread({}, this.props.exp, {\n            errorRecovery: ErrorRecovery.recoveredProps\n          })\n        });\n        if (__DEV__) {\n          return React.createElement(RootErrorBoundary, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 25\n            }\n          }, React.createElement(AppRootComponent, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 13\n            }\n          })));\n        } else {\n          return React.createElement(AppRootComponent, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 24\n            }\n          }));\n        }\n      }\n    }]);\n    return ExpoRootComponent;\n  }(React.Component);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,aAAa,MAAM,qBAAqB;AACpD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,OAAOC,iBAAiB;AAGxB,eAAc,SAAUC,YAAY,CAClCC,gBAAwC;EAExC;IAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA,yBACQ;QACJ,IAAMC,KAAK,qBACN,IAAI,CAACA,KAAK;UACbC,GAAG,oBAAO,IAAI,CAACD,KAAK,CAACC,GAAG;YAAEC,aAAa,EAAEP,aAAa,CAACQ;UAAc;QAAE,EACxE;QAED,IAAIC,OAAO,EAAE;UACX,OACE,oBAAC,iBAAiB;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAChB,oBAAC,gBAAgB,eAAKJ,KAAK;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAC7B,CAAoB;SAEvB,MAAM;UACL,OAAO,oBAAC,gBAAgB,eAAKA,KAAK;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAI;;MAE1C;IAAC;IAAA;EAAA,EAhBoCJ,KAAK,CAACS,SAAY;AAkB3D","names":["ErrorRecovery","React","RootErrorBoundary","withExpoRoot","AppRootComponent","props","exp","errorRecovery","recoveredProps","__DEV__","Component"],"sourceRoot":"","sources":["../../src/launch/withExpoRoot.web.tsx"],"sourcesContent":["import * as ErrorRecovery from 'expo-error-recovery';\nimport * as React from 'react';\n\nimport RootErrorBoundary from './RootErrorBoundary';\nimport { InitialProps } from './withExpoRoot.types';\n\nexport default function withExpoRoot<P extends InitialProps>(\n  AppRootComponent: React.ComponentType<P>\n): React.ComponentClass<P> {\n  return class ExpoRootComponent extends React.Component<P> {\n    render() {\n      const props = {\n        ...this.props,\n        exp: { ...this.props.exp, errorRecovery: ErrorRecovery.recoveredProps },\n      };\n\n      if (__DEV__) {\n        return (\n          <RootErrorBoundary>\n            <AppRootComponent {...props} />\n          </RootErrorBoundary>\n        );\n      } else {\n        return <AppRootComponent {...props} />;\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}